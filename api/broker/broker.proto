// Copyright Â© 2017 The Things Network
// Use of this source code is governed by the MIT license that can be found in the LICENSE file.

syntax = "proto3";

import "google/protobuf/empty.proto";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";
import "ttn/api/api.proto";
import "ttn/api/protocol/protocol.proto";
import "ttn/api/gateway/gateway.proto";
import "ttn/api/trace/trace.proto";

package broker;

option go_package = "github.com/TheThingsNetwork/ttn/api/broker";

message DownlinkOption {
  // String that identifies this downlink option in the Router
  string  identifier  = 1;
  // ID of the gateway where this downlink should be sent
  string  gateway_id  = 2;
  // Score of this downlink option. Deprecated
  uint32  score       = 3 [deprecated=true];
  // deadline time at server represented as Unix nanoseconds. Deprecated
  int64   deadline    = 4 [deprecated=true];

  protocol.TxConfiguration protocol_config = 5;
  gateway.TxConfiguration  gateway_config = 6;

  // RX Window Information

  bool    is_rx2    = 10;
  uint32  rx_delay  = 11;

  // Scheduling considerations

  // number of possible conflicts with other Tx
  uint32  possible_conflicts = 12;
  // progress towards the maximum Tx utilization
  float   duty_cycle         = 13;
  // total Rx utilization fraction over the last 10 minutes
  float   utilization        = 14;
}

// received from the Router
message UplinkMessage {
  bytes                    payload            = 1;
  protocol.Message         message            = 2;

  // NOTE: For LoRaWAN, the Router doesn't know the DevEUI/ID and AppEUI/ID

  bytes                    dev_eui            = 11 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.DevEUI"];
  bytes                    app_eui            = 12 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.AppEUI"];
  string                   app_id             = 13;
  string                   dev_id             = 14;

  protocol.RxMetadata      protocol_metadata  = 21;
  gateway.RxMetadata       gateway_metadata   = 22;
  repeated DownlinkOption  downlink_options   = 31;

  trace.Trace              trace              = 41;
}

// received from the Handler, sent to the Router, used as Template
message DownlinkMessage {
  bytes             payload          = 1;
  protocol.Message  message          = 2;

  bytes             dev_eui          = 11 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.DevEUI"];
  bytes             app_eui          = 12 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.AppEUI"];
  string            app_id           = 13;
  string            dev_id           = 14;

  DownlinkOption    downlink_option  = 21;

  trace.Trace       trace            = 31;
}

// sent to the Router, used as Template
message DeviceActivationResponse {
  bytes             payload          = 1;
  protocol.Message  message          = 2;

  DownlinkOption    downlink_option  = 11;

  trace.Trace       trace            = 21;
}

// sent to the Handler
message DeduplicatedUplinkMessage {
  bytes                       payload            = 1;
  protocol.Message            message            = 2;

  bytes                       dev_eui            = 11 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.DevEUI"];
  bytes                       app_eui            = 12 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.AppEUI"];
  string                      app_id             = 13;
  string                      dev_id             = 14;

  protocol.RxMetadata         protocol_metadata  = 21;
  repeated gateway.RxMetadata gateway_metadata   = 22;

  int64                       server_time        = 23;

  DownlinkMessage             response_template  = 31;

  trace.Trace                 trace              = 41;
}

// received from the Router
message DeviceActivationRequest {
  bytes                        payload              = 1;
  protocol.Message             message              = 2;

  bytes                        dev_eui              = 11 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.DevEUI"];
  bytes                        app_eui              = 12 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.AppEUI"];

  protocol.RxMetadata          protocol_metadata    = 21;
  gateway.RxMetadata           gateway_metadata     = 22;
  protocol.ActivationMetadata  activation_metadata  = 23;
  repeated DownlinkOption      downlink_options     = 31;

  trace.Trace                  trace                = 41;
}

// sent to the Handler
message DeduplicatedDeviceActivationRequest {
  bytes                        payload              = 1;
  protocol.Message             message              = 2;

  bytes                        dev_eui              = 11 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.DevEUI"];
  bytes                        app_eui              = 12 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.AppEUI"];
  string                       app_id               = 13;
  string                       dev_id               = 14;

  protocol.RxMetadata          protocol_metadata    = 21;
  repeated gateway.RxMetadata  gateway_metadata     = 22;
  protocol.ActivationMetadata  activation_metadata  = 23;

  int64                        server_time          = 24;

  DeviceActivationResponse     response_template    = 31;

  trace.Trace                  trace                = 41;
}

message ActivationChallengeRequest {
  bytes                        payload              = 1;
  protocol.Message             message              = 2;

  bytes                        dev_eui              = 11 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.DevEUI"];
  bytes                        app_eui              = 12 [(gogoproto.customtype) = "github.com/TheThingsNetwork/ttn/core/types.AppEUI"];
  string                       app_id               = 13;
  string                       dev_id               = 14;
}

message ActivationChallengeResponse {
  bytes             payload = 1;
  protocol.Message  message = 2;
}

// message SubscribeRequest is used by a Handler to subscribe to uplink messages
message SubscribeRequest {}

// The Broker service provides pure network functionality
service Broker {
  // Router initiates an Association with the Broker.
  rpc Associate(stream UplinkMessage) returns (stream DownlinkMessage);

  // Handler subscribes to uplink stream.
  rpc Subscribe(SubscribeRequest) returns (stream DeduplicatedUplinkMessage);

  // Handler initiates downlink stream.
  rpc Publish(stream DownlinkMessage) returns (google.protobuf.Empty);

  // Router requests device activation
  rpc Activate(DeviceActivationRequest) returns (DeviceActivationResponse);
}

// message StatusRequest is used to request the status of this Broker
message StatusRequest {}

message Status {
  api.SystemStats    system     = 1;
  api.ComponentStats component  = 2;

  api.Rates uplink              = 11;
  api.Rates uplink_unique       = 12;
  api.Rates downlink            = 13;
  api.Rates activations         = 14;
  api.Rates activations_unique  = 15;
  api.Percentiles deduplication = 16;

  // Connections
  uint32  connected_routers  = 21;
  uint32  connected_handlers = 22;
}

message ApplicationHandlerRegistration {
  string app_id      = 1;
  string handler_id  = 2;
}

// The BrokerManager service provides configuration and monitoring functionality
service BrokerManager {
  // Handler announces a new application to Broker. This is a temporary method that will be removed
  // when we can push updates from the Discovery service to the routing services.
  rpc  RegisterApplicationHandler(ApplicationHandlerRegistration) returns (google.protobuf.Empty);
  // Network operator requests Broker status
  rpc  GetStatus(StatusRequest) returns (Status);
}
